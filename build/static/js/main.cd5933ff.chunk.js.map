{"version":3,"sources":["Components/Footer/Footer.js","Components/Header/Header.js","Components/Layout/Layout.js","Components/ArticleCard/ArticleCard.js","Redux/Actions/Actions.js","Components/ArticleList/ArticleList.js","Redux/Actions/actiontypes.js","Components/ImageWithHeader/ImageWithHeader.js","Components/ArticleDetail/ArticleDetail.js","Components/PublishBlogForm/PublishFormBlog.js","App.js","serviceWorker.js","Redux/store.js","Redux/Reducers/Reducers.js","index.js"],"names":["Footer","className","href","Header","src","window","location","origin","alt","height","width","Layout","props","children","monthNames","ArticleCard","title","summary","date","slug","img","convertedDate","Date","key","sys","id","to","style","color","getMonth","getDay","getFullYear","client","require","createClient","space","accessToken","mapDispatchToProps","dispatchGetAllBlogList","dispatch","getState","getEntries","content_type","then","data","type","blogList","setAllBlogList","items","catch","console","error","connect","state","useEffect","map","item","index","fields","ImageWithHeader","backgroundImage","dispatchGetBlogDetails","getEntry","blogData","setBlogDetails","useParams","description","PublishFormBlog","onSubmit","event","preventDefault","htmlFor","rows","App","exact","path","Boolean","hostname","match","initialState","Reducers","action","Object","assign","ReactDOM","render","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","reduxImmutableStateVariant","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.cd5933ff.chunk.js","sourcesContent":["import React from 'react';\nimport \"./footer.css\";\n\nexport default function Footer() {\n    return (\n        <div className=\"footer\">\n            Copyright &copy; 2020 <strong>Logo Private</strong> All Rights Reserved\n                <div>\n                    <a href=\"mailto:manishajmera27@gmail.com\">manishajmera27@gmail.com | </a>\n                    <a href=\"tel:917597881885\">7597881885</a>\n                </div> \n        </div>\n    )\n}\n","import React from 'react';\nimport \"./Header.css\";\n\nexport default function Header() {\n    return (\n        <header>\n            <img src={`${window.location.origin}/logo.png`} alt=\"dummy\" height=\"40px\" width=\"80px\"/> \n        </header>\n    )\n}\n","import React from 'react';\nimport Footer from '../Footer/Footer';\nimport Header from '../Header/Header';\n\n\nexport default function Layout(props) {\n    return (\n        <>\n        <Header />\n\n            {props.children}\n                    <Footer />\n                </>\n\n    )\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"./ArticleCard.css\";\nconst monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\nexport default function ArticleCard({title,summary,slug,date,img,...props}) {\n    let convertedDate = new Date(date);\n\n    return (\n        <div className=\"row card\" key={props.sys.id}>\n            <div className=\"col col-sm-6 col-xs-12 no-float\">\n                <h2>{title}</h2>\n                <p>{summary}<Link to={props.sys.id} style={{color:\"#26af26\"}}> Read More</Link></p>\n                <span className=\"date\">{`${monthNames[convertedDate.getMonth()]} ${convertedDate.getDay()},${convertedDate.getFullYear()}`}</span>\n            </div>\n            <div className=\"col col-sm-6 col-xs-12 no-float align\">\n                <img src={window.location.origin + \"/default-image.jpg\"} alt=\"dummy\" height=\"240px\" width=\"400px\"/>\n            </div>\n        </div>\n    )\n}\n\n\n\n\n","import * as types from \"./actiontypes\";\nconst contentful  = require('contentful');\nconst client = contentful.createClient({\n  space: '6e53lvm4k39v',\n  accessToken: 'HlFVjWfLzb3sKSR1GuQ5EsMl9FT8f61scYI_ZykNXsY'\n})\n\n\n//Add any dispatches that send data to a reducer below\nexport const setAllBlogList = (data) => ({\n  type: types.BLOGLIST,\n  blogList:data\n});\nexport const setBlogDetails = (data) => ({\n  type: types.BLOGDETAILS,\n  blogData:data\n});\nexport const dispatchGetAllBlogList = () => {\n  \n  return function(dispatch, getState) {\n    client.getEntries({ content_type: 'blogs' }).then((data)=>{\n        dispatch(setAllBlogList(data.items));\n\n    }).catch(console.error);\n  };\n}\n\nexport const dispatchGetBlogDetails = (id) => {\n  return function(dispatch, getState) {\n    client.getEntry(`${id}`)\n  .then((data) => {\n    dispatch(setBlogDetails(data.fields))\n  }).catch(console.error)\n\n  };\n}","import React,{useEffect} from 'react';\nimport ArticleCard from '../ArticleCard/ArticleCard';\nimport { connect  } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./ArticleList.css\";\n\nimport {\n    dispatchGetAllBlogList\n} from \"../../Redux/Actions/Actions\";\n\nfunction ArticleList({blogList,dispatchGetAllBlogList}) {\n    useEffect(() => {\n        dispatchGetAllBlogList();\n    }, [dispatchGetAllBlogList])\n    return (\n        <div className=\"container\">\n        <Link to=\"/post-publish-form\" className=\"btn btn-primary publishbtn\">Publish a Post</Link>\n        {blogList ? \n            blogList.map((item,index)=> <ArticleCard {...item.fields } key={item.sys.id} sys={item.sys}  />) : null}\n       </div>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n      blogList: state.blogList,\n    };\n  }\n  \n  const mapDispatchToProps = {\n        dispatchGetAllBlogList,\n\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(ArticleList);","export const BLOGLIST = \"BLOGLIST\";\nexport const BLOGDETAILS = \"BLOGDETAILS\";\n\n","import React from 'react';\nimport \"./imageWithHeader.css\";\n\nexport default function ImageWithHeader({title}) {\n    return (\n        <div className=\"row paddingCls\">\n            <div className=\"bkgImg\" style={{backgroundImage: `url(${window.location.origin}/default-image.jpg)`}}>\n                <h2 className=\"caption\">{title}</h2>\n            </div>\n        </div>\n    )\n}\n","import React,{useEffect} from 'react';\nimport ImageWithHeader from '../ImageWithHeader/ImageWithHeader';\nimport \"./ArticleDetail.css\";\nimport { connect  } from \"react-redux\";\nimport {\n    dispatchGetBlogDetails\n} from \"../../Redux/Actions/Actions\";\nimport { useParams } from \"react-router-dom\";\nfunction ArticleDetail({dispatchGetBlogDetails,blogData}) {\n    let { id } = useParams();\n    useEffect(() => {\n        dispatchGetBlogDetails(id);\n    },[dispatchGetBlogDetails,id]);\n    return (\n        blogData ? <>\n        <ImageWithHeader title={blogData.title} />  \n        <div className=\"container\">\n          <div className=\"row page-desc\">\n             {blogData.description}\n          </div>\n        </div>\n        </> : <div className=\"text-al\">Page Not found</div>\n    )\n}\nfunction mapStateToProps(state) {\n    return {\n    blogData: state.blogData,\n    };\n  }\n  \n  const mapDispatchToProps = {\n    dispatchGetBlogDetails,\n\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(ArticleDetail);\n","import React from 'react';\nimport \"./PublishFormBlog.css\";\n// const contentful = require('contentful-management')\n\n// const client = contentful.createClient({\n//   accessToken: '<content_management_api_key>'\n// })\n\n\n\n\nexport default function PublishFormBlog() {\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        //api dispatch function should come here\n    //     client.getSpace('<space_id>')\n    //         .then((space) => space.getEnvironment('<environment_id>'))\n    //         .then((environment) => environment.createEntry('<content_type_id>', {\n    //         fields: {\n    //             title: {\n    //             'en-US': 'Entry title'\n    //             }\n    //         }\n    //     }))\n    // .then((entry) => console.log(entry))\n    // .catch(console.error)\n        // window.location.href = window.location.origin;\n        // console.log(event.target[1].value);\n    }\n    return (\n        <div className=\"container\">\n        <form className=\"form-class\" onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input type=\"text\" className=\"form-control\" id=\"title  \" />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"summary\">Summary</label>\n                    <textarea className=\"form-control\" rows=\"5\" id=\"summary\"></textarea>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"description\">Description</label>\n                    <textarea className=\"form-control\" rows=\"5\" id=\"description\"></textarea>\n                </div>\n                <button type=\"submit\" className=\"btn btn-default\">Submit</button>\n        </form>\n       </div>\n    )\n}\n","\nimport './App.css';\nimport React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport {ArticleList,Layout,ArticleDetail,PublishFormBlog} from './Components';\n\n\nfunction App() {\n  return(<Router>\n      <Layout>\n      <Switch>\n      <Route exact path=\"/post-publish-form\" children={<PublishFormBlog />} />\n      <Route exact path=\"/:id\" children={<ArticleDetail />} />\n      <Route path=\"/\" children={<ArticleList />} />\n      </Switch>\n      </Layout>\n  </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reduxImmutableStateVariant from \"redux-immutable-state-invariant\";\nimport thunkMiddleware from 'redux-thunk';\nimport Reducers from './Reducers/Reducers';\n\nexport const initStore = initialState => {\n  const store = createStore(\n    Reducers, \n    initialState, \n    composeWithDevTools(applyMiddleware(thunkMiddleware, reduxImmutableStateVariant()))\n  );\n\n  return store;\n};","import * as types from \"../Actions/actiontypes\";\n\nconst Reducers = (state = {}, action) => {\n  switch (action.type) {\n    case types.BLOGLIST:\n      return Object.assign({}, state, {\n        blogList: action.blogList\n      });\n    case types.BLOGDETAILS:\n      return Object.assign({}, state, {\n        blogData: action.blogData\n      });\n    default:\n      return state;\n  }\n};\n\nexport default Reducers;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {initStore} from './Redux/store';\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n  <Provider store={initStore()}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}